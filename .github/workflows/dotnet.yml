name: Unit Tests

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0' # alterado para a versÃ£o 8.0

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Run tests
        run: dotnet test --no-build --verbosity normal
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Run tests
        id: tests
        run: |
          dotnet test --no-build --verbosity normal > test-results.txt

      - name: Create test results summary
        id: create-summary
        run: |
          total_tests=0
          total_passed=0
          total_failed=0
          total_skipped=0
          
          for result in $(ls test-results-*.txt); do
          test_count=$(grep -o 'Total tests: [0-9]*' $result | awk '{print $3}')
          passed_count=$(grep -o 'Passed: [0-9]*' $result | awk '{print $2}')
          failed_count=$(grep -o 'Failed: [0-9]*' $result | awk '{print $2}')
          skipped_count=$(grep -o 'Skipped: [0-9]*' $result | awk '{print $2}')
          
          total_tests=$((total_tests + test_count))
          total_passed=$((total_passed + passed_count))
          total_failed=$((total_failed + failed_count))
          total_skipped=$((total_skipped + skipped_count))
          done
          
          echo "::set-output name=total_tests::$total_tests"
          echo "::set-output name=total_passed::$total_passed"
          echo "::set-output name=total_failed::$total_failed"
          echo "::set-output name=total_skipped::$total_skipped"

      - name: Post test results as a comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const totalTests = '${{ steps.create-summary.outputs.total_tests }}';
            const totalPassed = '${{ steps.create-summary.outputs.total_passed }}';
            const totalFailed = '${{ steps.create-summary.outputs.total_failed }}';
            const totalSkipped = '${{ steps.create-summary.outputs.total_skipped }}';
            const commentBody = `
              ## :white_check_mark: Test Results Summary
            
              | Total Tests | Passed Tests | Failed Tests | Skipped Tests |
              |-------------|--------------|--------------|---------------|
              | ${totalTests}      | ${totalPassed}       | ${totalFailed}       | ${totalSkipped}        |
            
              ### Details
            
              - **Total tests run:** ${totalTests}
              - **Tests passed:** ${totalPassed}
              - **Tests failed:** ${totalFailed}
              - **Tests skipped:** ${totalSkipped}
            
              ### Failed Tests
            
              \`\`\`
              ${'grep -A 1 "Failed" test-results-*.txt'}
              \`\`\`
            
              _This comment was automatically generated by a GitHub Action._
            `;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });